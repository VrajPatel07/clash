// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(uuid())
  username            String    @unique
  email               String    @unique
  password            String
  resetPassworkToken  String?
  resetPasswordExpiry DateTime?
  verifyCode          String
  verifyCodeExpiry    DateTime
  isVerified          Boolean   @default(false)
  createdAt           DateTime  @default(now())

  clash Clash[]
}

model Clash {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String?
  image       String
  createdAt   DateTime @default(now())
  expiredAt   DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  ClashItem     ClashItem[]
  ClashComments ClashComments[]
}

model ClashItem {
  id        String   @id @default(uuid())
  clashId   String
  image     String
  count     Int      @default(0)
  createdAt DateTime @default(now())

  clash Clash @relation(fields: [clashId], references: [id], onDelete: Cascade)
}

model ClashComments {
  id        String   @id @default(uuid())
  clashId   String
  comment   String
  createdAt DateTime @default(now())

  clash Clash @relation(fields: [clashId], references: [id], onDelete: Cascade)
}
